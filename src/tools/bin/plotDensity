#!/bin/bash
# 
# Copyright 2013 Axel Huebl, Rene Widera
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

help()
{
    echo "plotDensity  plot density of particles from binary picongpu density data"
    echo ""
    echo "usage: plotDensity [OPTION] dataFile"
    echo ""
    echo "-i                   - start interactiv gnuplot session"
    echo "-x                   - set description for x axis"
    echo "-y                   - set description for x axis"
    echo "-o filename          - name of the png picture (etc. test.png)"
    echo ""
    echo "--png resolution     - create png with resolution (etc. 1920x1080)"
    echo "--max value          - maximum value in color bar, if not set auto scaling is used"
}


initCall="$0 $*"

bindir=`dirname $0`/

png=0
interactive=0
max_color=0
X_AXIS="x"
Y_AXIS="y"

if [ $# -eq 0 ] ; then
    echo "No parameters are set" >&2
    echo -e "$(help)"
    exit 1;                
fi

# options may be followed by one colon to indicate they have a required argument
OPTS=`getopt -o ix:y:o:h -l png:,max:,help -- "$@"`
if [ $? != 0 ] ; then
    # something went wrong, getopt will put out an error message for us
    exit 1
fi

eval set -- "$OPTS"

while true ; do
    case "$1" in
        -i)
            interactive=1
            ;;
       -x)
            X_AXIS="$2"
            shift 
            ;;
       -y)
            Y_AXIS="$2"
            shift 
            ;;
       --png)    
            tmp="$2" ;
            X_RESOLUTION=`echo $tmp | cut -d"x" -f1` ;
            Y_RESOLUTION=`echo $tmp | cut -d"x" -f2` ;
            png=1;
            shift  ;
            ;;
       --max)    
            max_color="$2"
            if [ -z "$max_color" ] ; then
                echo "No maximal value for color bar is given" >&2
                exit 1;                
            fi
            shift 
            ;;
       -o)    
            OUTFILE="$2"
            if [ -z "$OUTFILE" ] ; then
                echo "No output file is set" >&2
                exit 1;                
            fi
            shift 
            ;;
        -h|--help)
            echo -e "$(help)"
            exit 1
            ;;
        --) shift; break;;
     
    esac
    shift
done

INFILE="$*"

if [ -z "$INFILE" ] ; then
    echo "No input file is given" >&2
    exit 1;
fi

if [ $png -eq 1 ] && [ -z "$OUTFILE" ] ; then
    echo "PNG output is selected but no output file is set." >&2
    exit 1;
fi

if [ $png -eq 1 ] ; then
    Y_RESOLUTION=$Y_RESOLUTION X_RESOLUTION=$X_RESOLUTION  X_AXIS=$X_AXIS Y_AXIS=$Y_AXIS INFILE=$INFILE OUTFILE=$OUTFILE COLORMAX=$max_color gnuplot $bindir/../share/gnuplot/density.png.gnuplot
fi

if [ $interactive -eq 1 ] ; then
    COLORMAX=$max_color X_AXIS=$X_AXIS Y_AXIS=$Y_AXIS INFILE=$INFILE gnuplot $bindir/../share/gnuplot/density.interactive.gnuplot
fi
