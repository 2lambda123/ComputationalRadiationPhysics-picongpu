/**
 * Copyright 2013 Ren√© Widera
 *
 * This file is part of PIConGPU. 
 * 
 * PIConGPU is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 * 
 * PIConGPU is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with PIConGPU.  
 * If not, see <http://www.gnu.org/licenses/>. 
 */



#pragma once

#include "types.h"
#include "particles/Identifier.hpp"
#include <boost/mpl/vector.hpp>
#include "dimensions/DataSpace.hpp"
#include "identifier/identifier.hpp"
#include "identifier/alias.hpp"
#include "identifier/value_identifier.hpp"

namespace picongpu
{
namespace bmpl=boost::mpl;

class ElectronMethods;
class IonMethods;

alias(position);
alias(globalCellIdx);
value_identifier(float3_X,position_pic,float3_X(0.,0.,0.));
value_identifier(float3_X,momentum,float3_X(0.,0.,0.));
value_identifier(float_X,weighting,0.0);
value_identifier(float3_X,momentumPrev1,float3_X(0.,0.,0.));   
value_identifier(bool,radiationFlag,false);    

value_identifier(DataSpace<3>,globalCellIdx_pic,DataSpace<3>());  

/*The next parts is not nice, we change this in a later update with new interfaces*/

typedef bmpl::vector<position<position_pic>,momentum,weighting> DefaultParticleAttributes;

typedef DefaultParticleAttributes ElectronsDataList;
typedef DefaultParticleAttributes IonsDataList;

typedef bmpl::vector<ElectronMethods> ElectronsMethodsList;
typedef bmpl::vector<IonMethods> IonsMethodsList;


} //namespace picongpu
