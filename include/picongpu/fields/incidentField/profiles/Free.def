/* Copyright 2020-2022 Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <cstdint>


namespace picongpu
{
    namespace fields
    {
        namespace incidentField
        {
            namespace profiles
            {
                /** Calculate incident field B from values of E using slowly varying envelope approximation (SVEA)
                 *
                 * It will make orientation consistent with the axis and direction that the Free profile is applied to.
                 * The calculated B values follow B = cross(k, E) / c, where k is propagation direction vector.
                 *
                 * This type does not adhere to FunctorIncidentFieldConcept, however can be used as the second
                 * (but not first) template parameter of Free<>.
                 */
                struct SVEAFunctorIncidentB;

                /** Free profile tag using given functors
                 *
                 * By default translates to source with same functors for any axis and direction.
                 * Thus, a user should hard-set the functors for the chosen axis and direction.
                 *
                 * @tparam T_FunctorIncidentE functor for the incident E field, follows the interface of
                 *                            FunctorIncidentFieldConcept (defined in Functors.hpp)
                 * @tparam T_FunctorIncidentB functor for the incident B field, follows the interface of
                 *                            FunctorIncidentFieldConcept (defined in Functors.hpp),
                 *                            or by default a special SVEA functor
                 */
                template<typename T_FunctorIncidentE, typename T_FunctorIncidentB = SVEAFunctorIncidentB>
                struct Free;

            } // namespace profiles
        } // namespace incidentField
    } // namespace fields
} // namespace picongpu
