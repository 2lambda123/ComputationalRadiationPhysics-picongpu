/* Copyright 2013-2021 Axel Huebl, Heiko Burau, Rene Widera, Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once


namespace picongpu
{
    namespace fields
    {
        namespace maxwellSolver
        {
            /** Finite-difference time-domain (FDTD) Maxwell's solver on a regular Yee grid
             *
             * This class template implements the general FDTD scheme for any given curl types.
             * It is second-order in time, the order in space depends on the curls, but is at least second.
             * All supported field solvers, except placeholder None, are aliases of this template.
             *
             * Reference: A. Taflove, S.C. Hagness. Computational Electrodynamics. The Finite-Difference Time-Domain
             * Method. Third Edition. Artech house, Boston (2005).
             *
             * @tparam T_CurlE functor to compute curl of E
             * @tparam T_CurlB functor to compute curl of B
             */
            template<typename T_CurlE, typename T_CurlB>
            class FDTD;

        } // namespace maxwellSolver
    } // namespace fields
} // namespace picongpu
